long r_long(FILE *);
int get_operand(unsigned char [], int);
void code_object(FILE *);
char *get_strings(FILE *, int );
void dis(unsigned char [], int , int [], int , char * [], int );
void get_tuple(FILE *, int [], int *, char * [], int *);

const char *opcodes[] = {
    " STOP_CODE ",
    " POP_TOP ",
    " ROT_TWO ",
    " ROT_THREE ",
    " DUP_TOP ",
    " ROT_FOUR ",
    " NO OPCODE ",
    " NO OPCODE ",
    " NO OPCODE ",
    " NOP ",
    " UNARY_POSITIVE ",
    " UNARY_NEGATIVE ",
    " UNARY_NOT ",
    " UNARY_CONVERT ",
    " NO OPCODE ",
    " UNARY_INVERT ",
    " NO OPCODE ",
    " NO OPCODE ",
    " NO OPCODE ",
    " BINARY_POWER ",
    " BINARY_MULTIPLY ",
    " BINARY_DIVIDE ",
    " BINARY_MODULO ",
    " BINARY_ADD ",
    " BINARY_SUBTRACT ",
    " BINARY_SUBSCR ",
    " BINARY_FLOOR_DIVIDE ",
    " BINARY_TRUE_DIVIDE ",
    " INPLACE_FLOOR_DIVIDE ",
    " INPLACE_TRUE_DIVIDE ",
    " SLICE+0 ",
    " SLICE+1 ",
    " SLICE+2 ",
    " SLICE+3 ",
    " NO OPCODE ",
    " NO OPCODE ",
    " NO OPCODE ",
    " NO OPCODE ",
    " NO OPCODE ",
    " NO OPCODE ",
    " STORE_SLICE+0 ",
    " STORE_SLICE+1 ",
    " STORE_SLICE+2 ",
    " STORE_SLICE+3 ",
    " NO OPCODE ",
    " NO OPCODE ",
    " NO OPCODE ",
    " NO OPCODE ",
    " NO OPCODE ",
    " NO OPCODE ",
    " DELETE_SLICE+0 ",
    " DELETE_SLICE+1 ",
    " DELETE_SLICE+2 ",
    " DELETE_SLICE+3 ",
    " STORE_MAP ",
    " INPLACE_ADD ",
    " INPLACE_SUBTRACT ",
    " INPLACE_MULTIPLY ",
    " INPLACE_DIVIDE ",
    " INPLACE_MODULO ",
    " STORE_SUBSCR ",
    " DELETE_SUBSCR ",
    " BINARY_LSHIFT ",
    " BINARY_RSHIFT ",
    " BINARY_AND ",
    " BINARY_XOR ",
    " BINARY_OR ",
    " INPLACE_POWER ",
    " GET_ITER ",
    " NO OPCODE ",
    " PRINT_EXPR ",
    " PRINT_ITEM ",
    " PRINT_NEWLINE ",
    " PRINT_ITEM_TO ",
    " PRINT_NEWLINE_TO ",
    " INPLACE_LSHIFT ",
    " INPLACE_RSHIFT ",
    " INPLACE_AND ",
    " INPLACE_XOR ",
    " INPLACE_OR ",
    " BREAK_LOOP ",
    " WITH_CLEANUP ",
    " LOAD_LOCALS ",
    " RETURN_VALUE ",
    " IMPORT_STAR ",
    " EXEC_STMT ",
    " YIELD_VALUE ",
    " POP_BLOCK ",
    " END_FINALLY ",
    " BUILD_CLASS ",
    " STORE_NAME ",
    " DELETE_NAME ",
    " UNPACK_SEQUENCE ",
    " FOR_ITER ",
    " LIST_APPEND ",
    " STORE_ATTR ",
    " DELETE_ATTR ",
    " STORE_GLOBAL ",
    " DELETE_GLOBAL ",
    " DUP_TOPX ",
    " LOAD_CONST ",
    " LOAD_NAME ",
    " BUILD_TUPLE ",
    " BUILD_LIST ",
    " BUILD_SET ",
    " BUILD_MAP ",
    " LOAD_ATTR ",
    " COMPARE_OP ",
    " IMPORT_NAME ",
    " IMPORT_FROM ",
    " JUMP_FORWARD ",
    " JUMP_IF_FALSE_OR_POP ",
    " JUMP_IF_TRUE_OR_POP ",
    " JUMP_ABSOLUTE ",
    " POP_JUMP_IF_FALSE ",
    " POP_JUMP_IF_TRUE ",
    " LOAD_GLOBAL ",
    " NO OPCODE ",
    " NO OPCODE ",
    " CONTINUE_LOOP ",
    " SETUP_LOOP ",
    " SETUP_EXCEPT ",
    " SETUP_FINALLY ",
    " NO OPCODE ",
    " LOAD_FAST ",
    " STORE_FAST ",
    " DELETE_FAST ",
    " NO OPCODE ",
    " NO OPCODE ",
    " NO OPCODE ",
    " RAISE_VARARGS ",
    " CALL_FUNCTION ",
    " MAKE_FUNCTION ",
    " BUILD_SLICE ",
    " MAKE_CLOSURE ",
    " LOAD_CLOSURE ",
    " LOAD_DEREF ",
    " STORE_DEREF ",
    " NO OPCODE ",
    " NO OPCODE ",
    " CALL_FUNCTION_VAR ",
    " CALL_FUNCTION_KW ",
    " CALL_FUNCTION_VAR_KW ",
    " SETUP_WITH ",
    " NO OPCODE ",
    " EXTENDED_ARG ",
    " SET_ADD ",
    " MAP_ADD ",
};
